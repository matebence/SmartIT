<?php
/**
 * @version		$Id: list.php $
 * @package		Joomla.Site
 * @subpackage	com_testimonies
 * @copyright	Copyright (C) 2005 - 2010 Open Source Matters, Inc. All rights reserved.
 * @license		GNU General Public License version 2 or later; see LICENSE.txt
 * @author		kiennh
 * This component was generated by http://xipat.com/ - 2015
 */

// No direct access
defined('_JEXEC') or die;

jimport('joomla.application.component.modellist');
jimport('joomla.application.component.helper');

/**
 * List model for the testimonies component.
 *
 * @package		Joomla.Site
 * @subpackage	com_testimonies
 * @since		1.6
 */
class TestimoniesModelList extends JModelList
{
	/**
	 * Gets a list of list
	 *
	 * @return	array	An array of list objects.
	 * @since	1.6
	 */            
	function getListQuery()
	{
		$db			= $this->getDbo();
		$query		= $db->getQuery(true);
		
		$query->select(
			'#__testimonies.id , #__testimonies.name, #__testimonies.avatar, #__testimonies.website_url, #__testimonies.comment, #__testimonies.rating, #__testimonies.company_name, #__testimonies.position'
		);
		
		$query->from('`#__testimonies`');
		$query->where('state=1');
		
        // Add the list ordering clause.
        $query->order($db->escape($this->getState('list.ordering', '#__testimonies.ordering')) . ' ' . $db->escape($this->getState('list.direction', 'ASC')));
		return $query;
	} 
      
    public function getForm($data = array(), $loadData = true)
    {
        // Get the form.
        $form = $this->loadForm('com_testimonies.item', 'item', array('control' => 'jform', 'load_data' => $loadData));
        if (empty($form)) {
            return false;
        }

        // Determine correct permissions to check.
        if ($this->getState('item.id')) {
            // Existing record. Can only edit in selected categories.
            $form->setFieldAttribute('#FIELD_CATEGORY_ID#', 'action', 'core.edit');
        } else {
            // New record. Can only create in selected categories.
            $form->setFieldAttribute('#FIELD_CATEGORY_ID#', 'action', 'core.create');
        }

        return $form;
    }  
    
    protected function loadFormData()
    {
        // Check the session for previously entered form data.
        $data = JFactory::getApplication()->getUserState('com_testimonies.edit.item.data', array());

        if (empty($data))
            $data = '';

        return $data;
    }    
    public function save($table,$data,$id=0)
    {
        $db            = $this->getDbo();
        //$query        = $db->getQuery(true);
        if ($id)
        {
            $data->id=$id;
            $db->updateObject($table,$data,'id',false);
            return $id;    
        }
        else
        {
            if (!$db->insertObject( $table, $data, 'id' )) {
                echo $db->stderr();
                die();
            }
            return $data->id;
            
        }
    } 
    protected function populateState($ordering = null, $direction = null) {
      $app = JFactory::getApplication();

      $limit = $app->getUserStateFromRequest('global.list.limit', 'limit', $app->getCfg('list_limit'), 'uint');
      $this->setState('list.limit', $limit);

      $limitstart = $app->input->get('limitstart', 0, 'uint');
      $this->setState('list.start', $limitstart);

    }            

}